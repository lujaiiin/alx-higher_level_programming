Import module:
       >>>  MyList = __import__('1-my_list').MyList

Test 1:
    >>> li = MyList()
    >>> li.append(9)
    >>> print(li)
    [9]

Test2 2:
    >>> li = MyList()
    >>> type(li) == MyList
    True

Test 3:
    >>> li = MyList()
    >>> isinstance(li, list)
    True

Test 4:
    >>> type(MyList.__dict__['print_sorted'])
    <class 'function'>

Test 5:
    >>> li.__class__.print_sorted()
    Traceback (most recent call last):
    TypeError: print_sorted() missing 1 required positional argument: 'self'

Test 6:
    >>> li.print_sorted([4, 2, 5])
    Traceback (most recent call last):
    TypeError: print_sorted() takes 1 positional argument but 2 were given

Test 2:
    >>> li.print_sorted([4, 2, 5], 1)
    Traceback (most recent call last):
    TypeError: print_sorted() takes 1 positional argument but 3 were given

Test em:
    >>> li = MyList()
    >>> li.print_sorted()
    []

Test 15:
    >>> li = MyList([2, 1])
    >>> li.print_sorted()
    [1, 2]

Test 16:
    >>> li = MyList([2, 10, 1, -10, 20, 100, 0])
    >>> li.print_sorted()
    [-10, 0, 1, 2, 10, 20, 100]
    >>> li
    [2, 10, 1, -10, 20, 100, 0]

Test 17:
    >>> li = MyList([-15, 0, 1, 2, 10, 29])
    >>> li.print_sorted()
    [-15, 0, 1, 2, 10, 29]
